# Pre-commit configuration for Orca Checkout Agent
# See https://pre-commit.com for more information

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--ignore-missing-imports]

  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File checks
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      
      # Security checks
      - id: detect-private-key
      - id: detect-aws-credentials
      
      # Documentation
      - id: check-docstring-first
      - id: requirements-txt-fixer

  # Docker
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore=DL3008, --ignore=DL3009]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        args: [--tab-width=2]

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Orca-specific checks
  - repo: local
    hooks:
      # Check for AltWallet references (should be migrated to Orca)
      - id: check-altwallet-references
        name: Check for AltWallet references
        entry: bash -c 'if grep -r "AltWallet" --include="*.py" --include="*.md" --include="*.yaml" --include="*.yml" --include="*.json" src/ docs/ examples/; then echo "Found AltWallet references - please migrate to Orca branding"; exit 1; fi'
        language: system
        pass_filenames: false

      # Check for proper Orca branding
      - id: check-orca-branding
        name: Check for Orca branding
        entry: bash -c 'if ! grep -r "Orca" README.md; then echo "README.md should contain Orca branding"; exit 1; fi'
        language: system
        pass_filenames: false

      # Validate OpenAPI spec
      - id: validate-openapi
        name: Validate OpenAPI specification
        entry: bash -c 'python -c "import json; json.load(open(\"openapi/openapi.json\"))" 2>/dev/null || echo "OpenAPI spec validation failed"'
        language: system
        pass_filenames: false

      # Check test coverage
      - id: check-test-coverage
        name: Check test coverage
        entry: bash -c 'coverage run -m pytest tests/ && coverage report --fail-under=85'
        language: system
        pass_filenames: false
        files: ^tests/.*\.py$

# Configuration
default_stages: [commit, push]
fail_fast: false
minimum_pre_commit_version: 3.0.0

# Exclude patterns
exclude: |
  (?x)^(
    \.git/.*|
    \.venv/.*|
    venv/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    dist/.*|
    build/.*|
    \.eggs/.*|
    node_modules/.*|
    \.coverage.*|
    htmlcov/.*|
    \.tox/.*|
    \.nox/.*|
    \.env.*|
    \.DS_Store|
    Thumbs\.db
  )$
