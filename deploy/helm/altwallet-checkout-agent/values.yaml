# Default values for altwallet-checkout-agent
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Image configuration
image:
  registry: docker.io
  repository: altwallet/checkout-agent
  tag: "1.0.0"
  pullPolicy: IfNotPresent
  pullSecrets: []

# Image pull secrets
imagePullSecrets: []

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Service configuration
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000
  annotations: {}
  labels: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: altwallet-checkout-agent.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: altwallet-checkout-agent-tls
  #    hosts:
  #      - altwallet-checkout-agent.local

# Resource configuration
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Liveness probe
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness probe
readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe
startupProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# Environment variables
env:
  # Application configuration
  - name: LOG_LEVEL
    value: "INFO"
  - name: LOG_FORMAT
    value: "json"
  - name: PORT
    value: "8000"
  - name: HOST
    value: "0.0.0.0"
  
  # Database configuration
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: altwallet-checkout-agent-secrets
        key: database-url
  
  # Redis configuration
  - name: REDIS_URL
    valueFrom:
      secretKeyRef:
        name: altwallet-checkout-agent-secrets
        key: redis-url
  
  # API configuration
  - name: API_KEY
    valueFrom:
      secretKeyRef:
        name: altwallet-checkout-agent-secrets
        key: api-key
  
  # Monitoring configuration
  - name: ENABLE_METRICS
    value: "true"
  - name: METRICS_PORT
    value: "9090"

# Additional environment variables
extraEnv: []

# ConfigMap for application configuration
configMap:
  create: true
  data:
    app.yaml: |
      server:
        host: "0.0.0.0"
        port: 8000
        workers: 4
      
      logging:
        level: "INFO"
        format: "json"
        structured: true
      
      database:
        pool_size: 10
        max_overflow: 20
        pool_timeout: 30
        pool_recycle: 3600
      
      redis:
        pool_size: 10
        max_connections: 20
        socket_timeout: 5
        socket_connect_timeout: 5
      
      features:
        enable_analytics: true
        enable_webhooks: true
        enable_caching: true
        cache_ttl: 300

# Secrets configuration
secrets:
  create: true
  data:
    # These should be overridden in production
    database-url: "postgresql://user:password@postgres:5432/altwallet"
    redis-url: "redis://redis:6379/0"
    api-key: "your-api-key-here"
    jwt-secret: "your-jwt-secret-here"
    encryption-key: "your-encryption-key-here"

# Persistent volume configuration
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 8Gi
  annotations: {}

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 8Gi

# Monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}
  
  prometheus:
    enabled: false
    server:
      persistentVolume:
        enabled: true
        size: 8Gi
  
  grafana:
    enabled: false
    adminPassword: "admin"
    persistence:
      enabled: true
      size: 1Gi

# Network policies
networkPolicy:
  enabled: false
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 8000

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Deployment strategy
deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# Horizontal Pod Autoscaler
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

# Vertical Pod Autoscaler
vpa:
  enabled: false
  updatePolicy: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: altwallet-checkout-agent
      maxAllowed:
        cpu: 2
        memory: 4Gi
      minAllowed:
        cpu: 100m
        memory: 128Mi

# Service mesh configuration
serviceMesh:
  enabled: false
  istio:
    enabled: false
    virtualService:
      enabled: false
    destinationRule:
      enabled: false
    gateway:
      enabled: false

# Backup configuration
backup:
  enabled: false
  schedule: "0 2 * * *"
  retention: "7d"
  storage:
    type: "s3"
    bucket: "altwallet-backups"
    region: "us-west-2"

# Development configuration
development:
  enabled: false
  hotReload: false
  debugPort: 5678
  debugger: false
